(** The definition of a computation, used to represent concurrent programs. *)
Require Import Coq.Lists.List.
Require Import Events.

Import ListNotations.

(** Definition of a computation. *)
Module C.
  Inductive t : Type :=
  | Ret : t
  | Seq : t -> t -> t
  | Send : forall (command : Command.t), Command.request command ->
    (Command.answer command -> t) -> t.

  Module Notations.
    Notation "'do!' A 'in' B" := (Seq A B)
      (at level 200, B at level 200).
  End Notations.
End C.
